import java.util.Hashtable;
import java.util.List;

import javax.ejb.Stateful;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.PersistenceContextType;
import business_objects.Plate;
import business_objects.User;


@Stateful
public class NutritionService implements NutritionServiceInterface{
	@PersistenceContext(name = "", type = PersistenceContextType.EXTENDED)
	EntityManager em;
	
	@Override
	public void storeUser(User user)
	{
		em.persist(user);
	}

	@Override
	public User getUserById(int id)
	{
		return em.find(User.class, id);
	}

	@Override
	public List<User> getAllUsers() {
		List<User> result = null;
		result = em.createQuery("from User").getResultList();
		return result;
	}

	@Override
	public void storePlate(Plate plate) {
		em.persist(plate);
	}

	@Override
	public List<Plate> getAllPlateByUserId(int id) {
		return em.createQuery(
				"FROM Plate p WHERE p.user.id=:id"
				).setParameter("id", id).getResultList();
	}
	
	public static void main(String[] args) {

		User user = new User("Martin", "Ecoffey", "m.ecoffey@gmail.com");
		
		try {
			Hashtable env = new Hashtable();
			env.put(Context.PROVIDER_URL, "http://localhost:8080/");//mysql://localhost:3306
			env.put(Context.SECURITY_PRINCIPAL, "root");
			env.put(Context.SECURITY_CREDENTIALS, "");
			
			Context ctx = new InitialContext();
			
//			NutritionService service = (NutritionService)ctx.lookup("nutrition_database/NutritionService/local");
//			service.storeUser(user);
			
			ctx.lookup("java:comp/env/jdbc/nutrition_database");
			
		} catch (NamingException e) {
			e.printStackTrace();
		}
	}

}
